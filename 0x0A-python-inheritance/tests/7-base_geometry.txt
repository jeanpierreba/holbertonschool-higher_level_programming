================================
 Doctest for BaseGeometry class
================================

``BaseGeometry`` is a class with a public instance method
'area' and a integer validator

import the function:

    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Tests for function:

    >>> bg = BaseGeometry()

    >>> bg = BaseGeometry(5)
    Traceback (most recent call last):
    ...
    TypeError: object() takes no parameters

    >>> bg.integer_validator("my_int", 12)

    >>> bg.area()
    Traceback (most recent call last):
              ...
    Exception: area() is not implemented

    >>> bg.integer_validator("name", "John")
    Traceback (most recent call last):
              ...
    TypeError: name must be an integer

    >>> bg.integer_validator("age", 0)
    Traceback (most recent call last):
              ...
    ValueError: age must be greater than 0

    >>> bg.integer_validator()
    Traceback (most recent call last):
              ...
    TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

    >>> bg.integer_validator("Holberton", 3, 8)
    Traceback (most recent call last):
              ...
    TypeError: integer_validator() takes 3 positional arguments but 4 were given

    >>> bg.integer_validator("age", {3, 4})
    Traceback (most recent call last):
              ...
    TypeError: age must be an integer
